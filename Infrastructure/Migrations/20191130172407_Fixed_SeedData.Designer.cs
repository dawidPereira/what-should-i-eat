// <auto-generated />
using System;
using Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AdministrationDbContext))]
    [Migration("20191130172407_Fixed_SeedData")]
    partial class Fixed_SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Ingredients.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Allergens")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Requirements")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            Allergens = 0,
                            Name = "Chicken",
                            Requirements = 8
                        },
                        new
                        {
                            Id = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            Allergens = 0,
                            Name = "Rice",
                            Requirements = 13
                        },
                        new
                        {
                            Id = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            Allergens = 1,
                            Name = "Oatmeal",
                            Requirements = 13
                        },
                        new
                        {
                            Id = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            Allergens = 1,
                            Name = "Milk",
                            Requirements = 13
                        });
                });

            modelBuilder.Entity("Domain.Ingredients.Entities.IngredientMacroNutrient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MacroNutrient")
                        .HasColumnType("int");

                    b.Property<double>("ParticipationInIngredient")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasAlternateKey("Id", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("IngredientMacroNutrient");

                    b.HasData(
                        new
                        {
                            Id = new Guid("57f65e80-a3aa-4ee3-b951-7d84e56e99ae"),
                            IngredientId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            MacroNutrient = 2,
                            ParticipationInIngredient = 0.20000000000000001
                        },
                        new
                        {
                            Id = new Guid("08974804-0522-455f-b27c-74dee5c82cc6"),
                            IngredientId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            MacroNutrient = 4,
                            ParticipationInIngredient = 0.10000000000000001
                        },
                        new
                        {
                            Id = new Guid("e6063871-5cc4-4b85-8a63-6678065c99ed"),
                            IngredientId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            MacroNutrient = 8,
                            ParticipationInIngredient = 0.59999999999999998
                        },
                        new
                        {
                            Id = new Guid("e338f2c2-19e5-4c59-9a62-004e5e45f0bf"),
                            IngredientId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            MacroNutrient = 2,
                            ParticipationInIngredient = 0.80000000000000004
                        },
                        new
                        {
                            Id = new Guid("2e1f4904-6269-4c78-944a-6798ad2f2c8e"),
                            IngredientId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            MacroNutrient = 4,
                            ParticipationInIngredient = 0.0
                        },
                        new
                        {
                            Id = new Guid("e8e7d7b3-f1b9-4912-903a-9bc16f87e6dc"),
                            IngredientId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            MacroNutrient = 8,
                            ParticipationInIngredient = 0.20000000000000001
                        },
                        new
                        {
                            Id = new Guid("f2046a3c-49bf-4e1a-bd24-52a118dcc608"),
                            IngredientId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            MacroNutrient = 2,
                            ParticipationInIngredient = 0.69999999999999996
                        },
                        new
                        {
                            Id = new Guid("aa6e2c5d-5f9b-4537-92b7-38e964cba602"),
                            IngredientId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            MacroNutrient = 4,
                            ParticipationInIngredient = 0.10000000000000001
                        },
                        new
                        {
                            Id = new Guid("601583fe-ce9e-490e-aaa5-15eb9f6e6c5f"),
                            IngredientId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            MacroNutrient = 8,
                            ParticipationInIngredient = 0.20000000000000001
                        },
                        new
                        {
                            Id = new Guid("b740b3ba-66d3-4df1-8741-72d5d62d0c04"),
                            IngredientId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            MacroNutrient = 2,
                            ParticipationInIngredient = 0.20000000000000001
                        },
                        new
                        {
                            Id = new Guid("c6be0199-141a-45aa-a5b6-10cb156f7403"),
                            IngredientId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            MacroNutrient = 4,
                            ParticipationInIngredient = 0.10000000000000001
                        },
                        new
                        {
                            Id = new Guid("47d10650-8632-477e-8367-629d915350dc"),
                            IngredientId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            MacroNutrient = 8,
                            ParticipationInIngredient = 0.20000000000000001
                        });
                });

            modelBuilder.Entity("Domain.Recipes.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e634f353-beab-443c-93a8-2988218ba59e"),
                            Description = "Default recipe description",
                            Name = "Oatmeal with milk"
                        },
                        new
                        {
                            Id = new Guid("641962f1-6c81-4c7e-af5e-b08e843e2f12"),
                            Description = "Default recipe description",
                            Name = "Chicken with rise"
                        });
                });

            modelBuilder.Entity("Domain.Recipes.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Grams")
                        .HasColumnType("float");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            RecipeId = new Guid("e634f353-beab-443c-93a8-2988218ba59e"),
                            Grams = 50.0
                        },
                        new
                        {
                            IngredientId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            RecipeId = new Guid("e634f353-beab-443c-93a8-2988218ba59e"),
                            Grams = 150.0
                        },
                        new
                        {
                            IngredientId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            RecipeId = new Guid("641962f1-6c81-4c7e-af5e-b08e843e2f12"),
                            Grams = 200.0
                        },
                        new
                        {
                            IngredientId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            RecipeId = new Guid("641962f1-6c81-4c7e-af5e-b08e843e2f12"),
                            Grams = 100.0
                        });
                });

            modelBuilder.Entity("Domain.Ingredients.Entities.IngredientMacroNutrient", b =>
                {
                    b.HasOne("Domain.Ingredients.Entities.Ingredient", null)
                        .WithMany("MacroNutrientsParticipants")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Recipes.Entities.Recipe", b =>
                {
                    b.OwnsOne("Domain.Recipes.Entities.RecipeDetails", "RecipeDetails", b1 =>
                        {
                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("ApproximateCost")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<int>("DifficultyLevel")
                                .HasColumnType("int");

                            b1.Property<int>("MealTypes")
                                .HasColumnType("int");

                            b1.Property<int>("PreparationTime")
                                .HasColumnType("int");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");

                            b1.HasData(
                                new
                                {
                                    RecipeId = new Guid("e634f353-beab-443c-93a8-2988218ba59e"),
                                    ApproximateCost = 8m,
                                    DifficultyLevel = 2,
                                    MealTypes = 18,
                                    PreparationTime = 15
                                },
                                new
                                {
                                    RecipeId = new Guid("641962f1-6c81-4c7e-af5e-b08e843e2f12"),
                                    ApproximateCost = 10m,
                                    DifficultyLevel = 2,
                                    MealTypes = 12,
                                    PreparationTime = 30
                                });
                        });
                });

            modelBuilder.Entity("Domain.Recipes.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Domain.Ingredients.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Recipes.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
