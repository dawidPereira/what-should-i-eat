// <auto-generated />
using System;
using Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AdministrationDbContext))]
    [Migration("20191229132056_Refactored_Database_Model")]
    partial class Refactored_Database_Model
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.Entities.Ingredient.MacroNutrientShares", b =>
                {
                    b.Property<int>("MacroNutrient")
                        .HasColumnType("int");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Share")
                        .HasColumnType("float");

                    b.HasKey("MacroNutrient", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("MacroNutrientShares");

                    b.HasData(
                        new
                        {
                            MacroNutrient = 1,
                            IngredientId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            Share = 0.20000000000000001
                        },
                        new
                        {
                            MacroNutrient = 2,
                            IngredientId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            Share = 0.10000000000000001
                        },
                        new
                        {
                            MacroNutrient = 4,
                            IngredientId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            Share = 0.59999999999999998
                        },
                        new
                        {
                            MacroNutrient = 1,
                            IngredientId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            Share = 0.80000000000000004
                        },
                        new
                        {
                            MacroNutrient = 2,
                            IngredientId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            Share = 0.0
                        },
                        new
                        {
                            MacroNutrient = 4,
                            IngredientId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            Share = 0.20000000000000001
                        },
                        new
                        {
                            MacroNutrient = 1,
                            IngredientId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            Share = 0.69999999999999996
                        },
                        new
                        {
                            MacroNutrient = 2,
                            IngredientId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            Share = 0.10000000000000001
                        },
                        new
                        {
                            MacroNutrient = 4,
                            IngredientId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            Share = 0.20000000000000001
                        },
                        new
                        {
                            MacroNutrient = 1,
                            IngredientId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            Share = 0.20000000000000001
                        },
                        new
                        {
                            MacroNutrient = 2,
                            IngredientId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            Share = 0.10000000000000001
                        },
                        new
                        {
                            MacroNutrient = 4,
                            IngredientId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            Share = 0.20000000000000001
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.Ingredients.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Allergens")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Requirements")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            Allergens = 0,
                            Name = "Chicken",
                            Requirements = 4
                        },
                        new
                        {
                            Id = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            Allergens = 0,
                            Name = "Rice",
                            Requirements = 7
                        },
                        new
                        {
                            Id = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            Allergens = 1,
                            Name = "Oatmeal",
                            Requirements = 7
                        },
                        new
                        {
                            Id = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            Allergens = 1,
                            Name = "Milk",
                            Requirements = 7
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.Recipe.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4977032a-2085-4ac2-821a-45ef6269edb3"),
                            Description = "Default recipe description",
                            Name = "Oatmeal with milk"
                        },
                        new
                        {
                            Id = new Guid("f904b5e7-f430-42d7-9258-c853ea2a3b68"),
                            Description = "Default recipe description",
                            Name = "Chicken with rise"
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.Recipe.RecipeIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Grams")
                        .HasColumnType("float");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredient");

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("4977032a-2085-4ac2-821a-45ef6269edb3"),
                            RecipeId = new Guid("9817c714-9534-42f1-bf58-fc9c9c177a0f"),
                            Grams = 50.0
                        },
                        new
                        {
                            IngredientId = new Guid("4977032a-2085-4ac2-821a-45ef6269edb3"),
                            RecipeId = new Guid("b4ec88f0-0a0d-4ad5-945f-32a4642fafc9"),
                            Grams = 150.0
                        },
                        new
                        {
                            IngredientId = new Guid("f904b5e7-f430-42d7-9258-c853ea2a3b68"),
                            RecipeId = new Guid("66f46fbb-2270-4948-9468-e0d0b3c698cf"),
                            Grams = 200.0
                        },
                        new
                        {
                            IngredientId = new Guid("f904b5e7-f430-42d7-9258-c853ea2a3b68"),
                            RecipeId = new Guid("0392aabc-37c7-4591-882d-5f00acfb4cae"),
                            Grams = 100.0
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.Ingredient.MacroNutrientShares", b =>
                {
                    b.HasOne("Infrastructure.Entities.Ingredients.Ingredient", null)
                        .WithMany("MacroNutrientsShares")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.Entities.Recipe.Recipe", b =>
                {
                    b.OwnsOne("Infrastructure.Entities.Recipe.RecipeInfo", "RecipeInfo", b1 =>
                        {
                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("ApproximateCost")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<int>("DifficultyLevel")
                                .HasColumnType("int");

                            b1.Property<int>("MealTypes")
                                .HasColumnType("int");

                            b1.Property<int>("PreparationTime")
                                .HasColumnType("int");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");

                            b1.HasData(
                                new
                                {
                                    RecipeId = new Guid("4977032a-2085-4ac2-821a-45ef6269edb3"),
                                    ApproximateCost = 8m,
                                    DifficultyLevel = 2,
                                    MealTypes = 18,
                                    PreparationTime = 15
                                },
                                new
                                {
                                    RecipeId = new Guid("f904b5e7-f430-42d7-9258-c853ea2a3b68"),
                                    ApproximateCost = 10m,
                                    DifficultyLevel = 2,
                                    MealTypes = 12,
                                    PreparationTime = 30
                                });
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.Recipe.RecipeIngredient", b =>
                {
                    b.HasOne("Infrastructure.Entities.Recipe.Recipe", null)
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
